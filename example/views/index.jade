extends layout

block content
  h1= title
  p #{title} is a JavaScript library for preserving user data from first website visit to signup.
  p This enables you to associate signups to marketing campaigns, referrers, and more.
  h3 How it works
  p The library stores data such as <i>utm_medium</i>, <i>landing_page</i> and <i>referrer</i> in a localStorage object, and makes the object available via a handy API with the following methods:
  pre #{title}.create() // automatically called on first website visit
    | #{title}.fetch() // returns the object
    | #{title}.convert(obj) // returns the object updated with conversion data
    | #{title}.update(obj) // lets you add additional parameters to the object
    | #{title}.destroy() // removes the object from localStorage
    | #{title}.visits.create() // adds a visit instance to the object, called automatically if has been over 30 minutes since the most recent visit.
    | #{title}.visits.all() // returns an array of all visits
    | #{title}.visits.fetch(id) // Fetch a specified visit
    | #{title}.visits.update(id, obj) // Update a specified visit with data in an object
    | #{title}.visits.delete(id) // Delete a specified visit

  h3 Usage
  p Add the library to every page on your website. When a visitor creates an account, call purser.convert() and add the user to your CRM/ChartMogul with attributes returned.
  ol
    li Install the #{purser} library
    li When a visitor creates an account, call purser.convert(obj) to get the visitor's marketing attributes
    li Add the user's marketing attributes to them in your CRM or app
  a(href="https://github.com/bilbof/purser").btn.btn-text.btn-text--more View the Github repository
  h3 Demo
  p Enter your name and click the 'Demo Create Account' button to see an example of how #{title} works.
  .demo
  form
    .form-group
        input( type="text" placeholder="Your Name" required).form-control#name
    .form-group
        <a class="btn btn-primary" id="test">Demo Create Account</a>
        <a class="btn btn-default" id="test-visit">Add a visit</a>
        <a class="btn btn-pink" id="test-delete">Delete object</a>
    pre#result

  script(src="/javascripts/purser.js")
  script.
    var submit = document.getElementById('test');
    var visit = document.getElementById('test-visit');
    var remove = document.getElementById('test-delete');

    function post(data){
      var xhr = new XMLHttpRequest();
      xhr.open("POST", "/test");
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.onreadystatechange = function() {
        if(xhr.readyState == 4 && xhr.status == 200) {
          document.getElementById('result').innerText = JSON.stringify(JSON.parse(xhr.responseText),  null, '\t')
        }
      }

      xhr.send(JSON.stringify(data));
    }

    submit.addEventListener('click', function(e){
      e.preventDefault();
      post({
        name: document.getElementById('name').value || "Not given",
        lead_created_at: new Date().toISOString(),
        purser_attributes: purser.convert({
          sign_up_button: "green-button"
        })
      })
    })

    visit.addEventListener('click', function(e){
      e.preventDefault();
      post({
        name: document.getElementById('name').value || "Not given",
        visit_button_clicked_at: new Date().toISOString(),
        purser_attributes: purser.visits.create()
      });
    })

    remove.addEventListener('click', function(e){
      e.preventDefault();
      purser.destroy();
      document.getElementById('result').innerText = ""
    })
